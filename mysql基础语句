regionSql = "select " \
                "t_region.name as regionName," \
                "sum(t_cluster_capacity.total_host_num) as hostNum," \
                "sum(t_cluster_capacity.separate_num) as separateNum," \
                "sum(t_cluster_capacity.allocated_vm_num) as allocatedVmNum," \
                "sum(t_cluster_capacity.total_vcpu_num) as totalVcpu," \
                "sum(t_cluster_capacity.total_mem) as totalMem," \
                "sum(t_cluster_capacity.allocated_vcpu_num) as alloctedVcpu," \
                "sum(t_cluster_capacity.allocated_mem) as alloctedMem," \
                "sum(t_cluster_capacity.free_vcpu_num) as freeVcpu," \
                "sum(t_cluster_capacity.free_mem) as freeMem," \
                "ifnull(sum(allocated_vcpu_num)/sum(total_vcpu_num),0) as vcpuAllocatedRate," \
                "ifnull(sum(allocated_mem)/sum(total_mem), 0) as memAllocatedRate " \
                "from t_cluster_capacity " \
                "left join t_cluster on t_cluster_capacity.t_cluster_id = t_cluster.id " \
                "left join t_pod on t_pod.id = t_cluster.t_pod_id " \
                "left join t_az on t_az.id = t_pod.t_az_id " \
                "left join t_region on  t_region.id =  t_az.t_region_id " \
                "where " \
                "t_cluster.attribute = 'common' or t_cluster.attribute = 'dec' or t_cluster.attribute = 'deh' " \
                "group by t_region.name;"
sum为求和，搭配后面的group by，根据region name求和
mysql的ifnull函数，如果第一个值不为空，则返回该值，如果第一个值为null，则返回第二个值。这里是为了避免除0错误

    azSql = "select " \
            "t_region.name as regionName," \
            "t_az.name as azName," \
            "sum(t_cluster_capacity.total_host_num) as hostNum," \
            "sum(t_cluster_capacity.separate_num) as separateNum," \
            "sum(t_cluster_capacity.allocated_vm_num) as allocatedVmNum," \
            "sum(t_cluster_capacity.total_vcpu_num) as totalVcpu," \
            "sum(t_cluster_capacity.total_mem) as totalMem," \
            "sum(t_cluster_capacity.allocated_vcpu_num) as alloctedVcpu," \
            "sum(t_cluster_capacity.allocated_mem) as alloctedMem," \
            "sum(t_cluster_capacity.free_vcpu_num) as freeVcpu," \
            "sum(t_cluster_capacity.free_mem) as freeMem," \
            "ifnull(sum(allocated_vcpu_num)/sum(total_vcpu_num),0) as vcpuAllocatedRate," \
            "ifnull(sum(allocated_mem)/sum(total_mem), 0) as memAllocatedRate " \
            "from t_cluster_capacity " \
            "left join t_cluster on t_cluster_capacity.t_cluster_id = t_cluster.id " \
            "left join t_pod on t_pod.id = t_cluster.t_pod_id " \
            "left join t_az on t_az.id = t_pod.t_az_id " \
            "left join t_region on  t_region.id =  t_az.t_region_id " \
            "where " \
            "t_cluster.attribute = 'common' or t_cluster.attribute = 'dec' or t_cluster.attribute = 'deh' " \
            "group by t_az.name;"

    podSql = "select " \
             "t_region.name as regionName," \
             "t_az.name as azName," \
             "t_pod.name as podName," \
             "sum(t_cluster_capacity.total_host_num) as hostNum," \
             "sum(t_cluster_capacity.separate_num) as separateNum," \
             "sum(t_cluster_capacity.allocated_vm_num) as allocatedVmNum," \
             "sum(t_cluster_capacity.total_vcpu_num) as totalVcpu," \
             "sum(t_cluster_capacity.total_mem) as totalMem," \
             "sum(t_cluster_capacity.allocated_vcpu_num) as alloctedVcpu," \
             "sum(t_cluster_capacity.allocated_mem) as alloctedMem," \
             "sum(t_cluster_capacity.free_vcpu_num) as freeVcpu," \
             "sum(t_cluster_capacity.free_mem) as freeMem," \
             "ifnull(sum(allocated_vcpu_num)/sum(total_vcpu_num),0) as vcpuAllocatedRate," \
             "ifnull(sum(allocated_mem)/sum(total_mem), 0) as memAllocatedRate " \
             "from t_cluster_capacity " \
             "left join t_cluster on t_cluster_capacity.t_cluster_id = t_cluster.id " \
             "left join t_pod on t_pod.id = t_cluster.t_pod_id " \
             "left join t_az on t_az.id = t_pod.t_az_id " \
             "left join t_region on  t_region.id =  t_az.t_region_id " \
             "where " \
             "t_cluster.attribute = 'common' or t_cluster.attribute = 'dec' or t_cluster.attribute = 'deh' " \
             "group by t_pod.name;"

    clusterSql = "select " \
                 "t_region.name as regionName," \
                 "t_az.name as azName," \
                 "t_pod.name as podName," \
                 "t_cluster.name as clusterName," \
                 "t_cluster.attribute as attribute," \
                 "t_cluster.type as type," \
                 "t_flavor.name as flavorName," \
                 "t_cluster_capacity.total_host_num as hostNum," \
                 "t_cluster_capacity.separate_num as separateNum," \
                 "t_cluster_capacity.allocated_vm_num as allocatedVmNum," \
                 "t_cluster_capacity.total_vcpu_num as totalVcpu," \
                 "t_cluster_capacity.total_mem as totalMem," \
                 "t_cluster_capacity.allocated_vcpu_num as alloctedVcpu," \
                 "t_cluster_capacity.allocated_mem as alloctedMem," \
                 "t_cluster_capacity.free_vcpu_num as freeVcpu," \
                 "t_cluster_capacity.free_mem as freeMem," \
                 "ifnull(allocated_vcpu_num/total_vcpu_num,0) as vcpuAllocatedRate," \
                 "ifnull(allocated_mem/total_mem, 0) as memAllocatedRate " \
                 "from t_cluster_capacity " \
                 "left join t_cluster on t_cluster_capacity.t_cluster_id = t_cluster.id " \
                 "left join t_flavor on t_cluster.t_flavor_id = t_flavor.id " \
                 "left join t_pod on t_pod.id = t_cluster.t_pod_id " \
                 "left join t_az on t_az.id = t_pod.t_az_id " \
                 "left join t_region on  t_region.id =  t_az.t_region_id " \
                 "where t_cluster.attribute = 'common' or t_cluster.attribute = 'dec' or t_cluster.attribute = 'deh';"

    flavorSql = "select t_region.name as regionName,t_az.name as azName,t_flavor.name as flavorName," \
                "t_cluster.name as clusterName,t_cluster.attribute as attribute," \
                "sum(t_cluster_capacity.total_host_num) as hostNum," \
                "sum(t_cluster_capacity.separate_num) as separateNum," \
                "sum(t_cluster_capacity.allocated_vm_num) as allocatedVmNum," \
                "sum(t_cluster_capacity.total_vcpu_num) as totalVcpu," \
                "sum(t_cluster_capacity.total_mem) as totalMem," \
                "sum(t_cluster_capacity.allocated_vcpu_num) as alloctedVcpu," \
                "sum(t_cluster_capacity.allocated_mem) as alloctedMem," \
                "sum(t_cluster_capacity.free_vcpu_num) as freeVcpu," \
                "sum(t_cluster_capacity.free_mem) as freeMem," \
                "ifnull(sum(allocated_vcpu_num)/sum(total_vcpu_num),0) as vcpuAllocatedRate," \
                "ifnull(sum(allocated_mem)/sum(total_mem), 0) as memAllocatedRate " \
                "from t_cluster_capacity left join t_cluster on t_cluster_capacity.t_cluster_id = t_cluster.id " \
                "left join t_flavor on t_cluster.t_flavor_id = t_flavor.id " \
                "left join t_pod on t_cluster.t_pod_id = t_pod.id " \
                "left join t_az on t_pod.t_az_id = t_az.id " \
                "left join t_region on t_az.t_region_id = t_region.id " \
                "where t_cluster.attribute = 'common' or t_cluster.attribute = 'dec' or t_cluster.attribute = 'deh' " \
                "group by t_cluster.attribute,t_flavor.name,t_az.name;"
