报错：TypeError: not all arguments converted during string formatting
一般情况下是两边字符串数量不对等

mysql workbench 常用快捷键
新建tab(new tab) ctrl+t
执行当前语句(execute current statement)   ctrl+enter 
执行全部或选中的语句(execute all or selection)   ctrl+shift+enter 
查看执行计划(explain current statement)  ctrl+alt+x
注释   - -加空格，如 –    select * from t; 

mysql内联结与外联结
内联结可使用where语句，也可以使用（inner）jion...on...，语句中表的顺序可以任意，按公共字段，结果集中只产生两张表中共有的部分
外联结可分为：左外联结，右外联结和全外联结
外联结可以产生这些信息：在相同列上没有对应值的行也可以包含在结果表中。在表之间找不到对应值时，在该列上的位置上以控制填充。（不会丢失其中一张表的
信息，比如说左联结和右联结，或两种表的信息都不丢失，比如说全联结）
外联结可以使用left（outer）jion...on,right (outer) join...on,full(outer) join...on...，语句中表的顺序对结果集有影响。
左联结保证左边的表中的信息不会丢失，左表中的某个字段值，右表不存在对应的值，则结果集中把这条记录中右表对应的位置null，右联结，全联结与左联结类似。

如何展示文件隐藏拓展名
控制面板--外观和个性化--文件夹选项--显示隐藏的文件和文件夹--查看--显示隐藏的文件和文件夹（取消勾选隐藏已知文件的扩展名）

Ord函数说明
Ord 返回字符的ASCII编码值。
Ord('0')，返回的是字符’0’对应的ASCII编码
>127：认为是双字节字符
>=48且<=57：0-9
>=65且<=90：A-Z
>=97且<=122：a-z

vue-cli使用vue脚手架快速搭建前台项目：

前提：下载安装node.js（完成后带npm）
查看版本（是否安装成功）：node -v , npm -v ,vue -V

1.配置npm代理
在hw内部不能使用外网，但是可以使用华为内部的代理
打开cmd命令窗口，按顺序执行下列命令，配置npm
npm config rm proxy
npm config rm http-proxy
npm config rm https-proxy
npm config set no-proxy .huawei.com
npm config set registry http://w3cloudnkg-sit1.huawei.com/ccloud/nexus/content/groups/npm-all/

2.安装vue
npm install vue -g

3.安装vue-cli
npm install  vue-cli -g

4.下载vue模板并进行初始化
vue init  模板名称  项目名称  for example： vue init webpack-develop  myvue
模板可以到vue官网下载，到  https://github.com/vuejs-templates（或者：https://github.com/vuejs/vue-cli） 下载对应的模板压缩包，解压
使用如下命令创建项目并初始化项目模板 ： vue init ./webpack-develop vue

5.然后根据提示，输入对应信息
项目名称，一路回车，选择项直接全部选择no，最后一项选择yes（should we run 'npm install' for you after the project has been created?）。
然后继续按回车显示初始化完成。

6.然后按照提示，执行下列命令
cd myvue     //进入所创建的项目文件夹myvue
npm run dev   //启动项目

然后在网页中打开  http://localhost:8080  显示vue欢迎界面的即表示运行成功。

linux重命名和移动文件和文件夹
mv A B 将目录A重命名为B
mv /a /b/c  将/a目录移动到/b下，并重命名为c
mv abc def  将名为abc的文件重命名为def，（注意，如果当前目录下也有名为def的文件的话，那么这个重命名的文件会将其覆盖）

pycharm连接远程服务器配置
配置deployment（tools里）
选择configuration，选择加号，传输类型选择sftp
填上连接名称（随意）--填上远程linux服务器ip（sftp host）--端口默认22，rootpath填写你在linux里要访问的文件路径，然后填写用户名和密码，
以上是connect部分，是连接linux服务器填写的部分，如果要从本地上传文件至linux服务器，需要继续配置mappings
localpath填写你要上传至linux服务器的本地文件的放置路径，打开的pycahrm的时候也是直接在这个路径下打开
deployment path on server ‘linux...’填写文件部署在linux上的路径，即本地文件会被上传到当前路径
webpath on server... 可以默认不填
选择远程python解释器
file--settings--project xx--project interpreter，选择右方设置按钮，选择deployment configuration，配置deployment configuration，选择create
，copy of this deployment server。最后的python interpreter path，选择linux上python解释器的绝对路径。
选中左边的external libraries，即选择远程python解释器。

本地连接远程服务器：打开指定文件夹，选择tools--deployment--browse remote host，即可连接远程服务器，可以双击打开文件，进行修改后直接点击上传
按钮，即可自动同步到linux服务器上。也可以进行更名操作，实时同步的。

python round()函数
round（）方法返回浮点数x的四舍五入值
print "round(80.23456, 2) : ", round(80.23456, 2)
print "round(100.000056, 3) : ", round(100.000056, 3)
print "round(-100.000056, 3) : ", round(-100.000056, 3)
对应结果：
round(80.23456, 2) :  80.23
round(100.000056, 3) :  100.0
round(-100.000056, 3) :  -100.0

python datetime 时间日期处理小结：
#1、返回昨天日期
def getYesterday():  
   today=datetime.date.today()  
   oneday=datetime.timedelta(days=1)  
   yesterday=today-oneday   
   return yesterday  
#2、返回今天日期   
def getToday():  
    return datetime.date.today()     
#4、将字符串转换成datetime类型  
def strtodatetime(datestr,format):      
    return datetime.datetime.strptime(datestr,format)  
#5、时间转换成字符串,格式为2008-08-02  
def datetostr(date):    
    return   str(date)[0:10]   
#8、获取当前年份 是一个字符串  
def getYear():  
    return str(datetime.date.today())[0:4]   

#9、获取当前月份 是一个字符串  
def getMonth():  
    return str(datetime.date.today())[5:7]  

#10、获取当前天 是一个字符串  
def getDay():  
    return str(datetime.date.today())[8:10]     
def getNow():  
    return datetime.datetime.now()  
    
#11、将字符串格式化成时间  

    import datetime
    >>> s="2006-1-2"
    print datetime.datetime.strptime(s,"%Y-%m-%d")
    2006-01-02 00:00:00
    import time
    >>> s="2006-1-2"
    >>> time.strptime(s,"%Y-%m-%d")
    >>> from time import *
    >>> strftime("%Y-%m-%d %H:%M:%S", localtime())
    '2011-10-12 03:00:58'
#12、将格式字符串转换为时间戳
    >>> a = "Sat Mar 28 22:24:24 2009"
    >>> b = mktime(strptime(a,"%a %b %d %H:%M:%S %Y"))
    >>> print b
    1238250264.0
    
python如何读取一个文件的最后一行：
1，文件比较大时，一行一行循环直到最后一行，读取最后一行；
targetLine = "";
lineNo = 0;  
while 1:
    mLine = file.readline();
    if not mLine:
        break;
    lineNo += 1;
    if (linecount == lineNO):
        targetLine = mLine;
        
2, 文件比较小，直接读取全文，取最后一行数据。
targetLine = "";  
mLines = file.read();
targetLine = mLines[-1];

如何快速的注释掉一行：鼠标放在某一行，ctrl+/

print语句的python2和python3的区别：
python2：print “xxx”  ，print bianliang   ;python3: print ("xxx")  , print (bianliang)

linux删除文件夹和文件
rm 文件名       rm -rf  目录名/文件夹

pycharm只有 pycharm professional版本支持连接远程服务器

pycharm还有一个比较功能，可以比较远程和本地文件：
选择Tools | Deployment | Browse Remote Host，打开远程文件视图，在右侧窗口就能看到远程主机中的文件
选择一个你想要对比的文件夹，点击右键->Sync with Local，打开同步对比窗口，使用左右箭头来同步内容。
上面是服务器与本地对比，那么本地文件通服务器对比，就先在PyCharm里面选择文件或文件夹，然后右键->Deployment->Sync with deployed to即可

配置远程python解释器
选择File | Settings，选择Project | Project Interpreter，然后在右边，点击那个小齿轮设置；
然后点击”Add Remote”，填写主机的ssh配置
如果之前配置过SFTP的话就直接选“Deployment configuration”，然后选择刚刚的模板名称就可以了
然后设置python interpreter path，设置为linux上python解释器的绝对路径就可以了。


windows查看隐藏文件夹和显示拓展名：
计算机--组织--文件夹与搜素选项--查看--

Mysql workbench 连接数据库：
Manage connection或者直接选择加号：输入数据库账号密码，端口默认，测试连接成功后，即可连接
虚拟机内还需要加权限：
路径：c\windows\system32\drivers\dect
用记事本打开hosts文件，在最底端加入  ip 域名
这里连接数据库是填入： 10.1.70.155  cloudu-3306-mydb-ser.service.consul

Python zip() 函数
zip() 函数用于将可迭代的对象作为参数，将对象中对应的元素打包成一个个元组，然后返回由这些元组组成的列表。
如果各个迭代器的元素个数不一致，则返回列表长度与最短的对象相同，利用 * 号操作符，可以将元组解压为列表。
zip 方法在 Python 2 和 Python 3 中的不同：在 Python 3.x 中为了减少内存，zip() 返回的是一个对象。如需展示列表，需手动 list() 转换。
>>>a = [1,2,3]
>>> b = [4,5,6]
>>> c = [4,5,6,7,8]
>>> zipped = zip(a,b)     # 打包为元组的列表
[(1, 4), (2, 5), (3, 6)]
>>> zip(a,c)              # 元素个数与最短的列表一致
[(1, 4), (2, 5), (3, 6)]
>>> zip(*zipped)          # 与 zip 相反，*zipped 可理解为解压，返回二维矩阵式
[(1, 2, 3), (4, 5, 6)]

package.json
管理所有module的，里面有我们项目里面用到的包，现在这个项目搭起来只是基础的，可能后面我们还需要使用到别的包，就需要将包添加到这个文件里面。
然后Npm install 重新安装下

