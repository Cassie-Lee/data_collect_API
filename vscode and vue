mode=“hash”，在网址后面带上# ；mode=“history”，网址是原网址，不用带任何符号（在router/index.js文件中）
下载路由，npm run vue-router，下载后的文件在module文件里面找
加载模块import VueRouter from 'vue-router'
注册：Vue.use(Router) 
定义路由：
export default new Router({
 //mode:'history',
 routes: [ {
   path: '/',
   name: 'Index',
   component: Index,
   children:[
    {path:'',component:indexHome}, {path:'add',component:addHome}
  ] },
})
使用定义好的路由：
第一种使用方式：
<router-link to='/'>首页</router-link>
<router-link to='/add'>子页面</router-link>
第二种使用方式：
this.$router.push('/')
this.$router.push('/add')

vue-router 默认 hash 模式 —— 使用 URL 的 hash 来模拟一个完整的 URL，于是当 URL 改变时，页面不会重新加载。
如果不想要很丑的 hash，我们可以用路由的 history 模式，这种模式充分利用 history.pushState API 来完成 URL 跳转而无须重新加载页面。
当你使用 history 模式时，URL 就像正常的 url，例如 http://yoursite.com/user/id，也好看！
不过这种模式要玩好，还需要后台配置支持。因为我们的应用是个单页客户端应用，如果后台没有正确的配置，当用户在浏览器直接访问 http://oursite.com/user/id 
就会返回 404，这就不好看了。
所以呢，你要在服务端增加一个覆盖所有情况的候选资源：如果 URL 匹配不到任何静态资源，则应该返回同一个 index.html 页面，这个页面就是你 app 依赖的页面。
建议：后台在没有配置的情况下，不建议开启history 模式，否则项目编译过后的页面打开空白，本地运行正常。

vscode插件离线安装：以Auto Close Tag为例（自动补全标签）（适合没网情况）（有网情况下直接在extension搜索插件安装即可）
打开vscode插件市场（Extensions for the Visual Studio family of product），输入想要的安装的插件名称。
点击进入插件主页，点击右侧的 Download Extension 链接，得到下载下来的离线安装包，以 .vsix 为扩展名结尾
把下载下来的离线安装包拷贝到 VSCode 的安装目录下的 bin 目录下，比如我的 VSCode 安装在 D:\Microsoft VS Code\，因此这里我应该拷贝到 
D:\Microsoft VS Code\bin 这个目录下 
在第 3 步的 bin 目录下右键点击 在此处打开命令窗口，输入命令，最后面的参数换成你下载的插件离线安装包的名字即可：
code --install-extension yzhang.markdown-all-in-one-1.4.0.vsix
待看到如下提示即意味着安装成功，就可以打开 VSCode 进行查看了
Extension ‘yzhang.markdown-all-in-one-1.4.0.vsix’ was successfully installed!

pycharm安装：
官网下载pycharm安装包
选择windows系统的专业版下载（professional），安装软件，创建桌面快捷方式并关联py文件，选择开始菜单文件夹（默认即可），点击安装。
安装完后，勾选立即运行pycharm，选择是否导入开发配置文件，我们选择不导入，
选择输入激活码激活软件，“activation code”
软件激活方式
  1、推荐购买正版软件。
  2、可以选择下载社区版本，免费的。
  3、专业版本可以选择试用，免费试用30天。
  4、网上寻找激活码或授权服务器。
我们使用第4种方法：
  在IntelliJ IDEA 注册码网站，获取激活码，以前允许自定义用户名，现在已经是No了，只能直接获取激活码。
点击获取激活码后，文本默认是全选中的，直接右击选择复制即可。
将激活码粘贴到文本框，点击OK即可。

pycharm常用快捷键：
1、Ctrl + Enter：在下方新建行但不移动光标；
2、Shift + Enter：在下方新建行并移到新行行首；
3、Ctrl + /：注释(取消注释)选择的行；
4、Ctrl + Alt + L：格式化代码(与QQ锁定热键冲突，关闭QQ的热键)；
5、Ctrl + Shift + +：展开所有的代码块；
6、Ctrl + Shift + -：收缩所有的代码块；
7、Ctrl + Alt + I：自动缩进行；
8、Alt + Enter：优化代码，添加包；
9、Ctrl + Shift + F：高级查找；
10、Alt + Shift + Q：更新代码到远程服务器；

使用pycharm可以直接为远程linux服务器设置权限（替代chmod操作）：
选中远程linux服务器的文件，右击，选change permissions，然后可以直接勾选权限，x为执行权限

vscode常用快捷键：
Ctrl +`	切换集成终端	workbench.action.terminal.toggleTerminal
Ctrl + K Ctrl + C.	添加行注释	editor.action.addCommentLine
Ctrl + K Ctrl + U.	删除行注释	editor.action.removeCommentLine
按Ctrl + F	找	actions.find
按Ctrl + H	更换	editor.action.startFindReplaceAction

遇到的问题：
pycharm的python解释器配置问题，路径问题
log文件的路径修改

vue：增加api访问需要用到的插件 toggle-dns.bat
api访问数据，单独从vscode的前端开发环境进入，需要配置跨域。若直接从python端运行整个项目，也需要配置跨域，还需要配置其他东西
编辑器运行之后访问浏览器：host+port，如xxx.com:8000

/*上传修改*/
$ git add .
$ git commit -m "add files"
$ git push origin master

windows系统给相应的python环境安装包：
python3 -m pip install django 

vscode设置缩进2个空格：
文件-首选项-设置-在用户设置里面加入以下设置进行覆盖：
"editor.tabSize":2,
https://blog.csdn.net/qq_33988065/article/details/79193714

https://blog.csdn.net/u012814856/article/details/80684376
https://blog.csdn.net/Jack_wise/article/details/80690826













