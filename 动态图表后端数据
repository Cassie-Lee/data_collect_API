返回数据格式为
{
"dataKeyList": ["vmNum", "Si2", "Si3", "c3_2", "c3_4", "d2", "h3", "m3", "g3", "g5", "ei_mcs_c3"],
"dataList": [32899, 1198, 21854, 1640, 3047, 609, 329, 3983, 36, 69, 134]
}


@csrf_exempt
def getRegionFlavorData(request):
    #param = '西南-贵阳'
    param = eval(request.body)['currentRegion']

    if (len(param) == 0):
        logging.error("[ERR]Get parameters error.")
        data = None
    else:
        data = getFlavorDataByRegion(param)

    return JsonResponse(data, safe=False)


def getFlavorDataByRegion(regionName):
    cursor = connections['default'].cursor()
    dataKeyList = []
    dataList =[]

    try:
        queryHypervisorSql = "select count(*) from t_hypervisor left join t_cluster on t_hypervisor.t_cluster_id=t_cluster.id " \
                             "left join t_pod on t_cluster.t_pod_id=t_pod.id " \
                             "left join t_az on t_pod.t_az_id=t_az.id left join t_region on t_az.t_region_id=t_region.id " \
                             "where (t_cluster.attribute ='common' or t_cluster.attribute ='dec'  or t_cluster.attribute='deh') " \
                             "and t_region.name = '"+regionName+"' ;"
        cursor.execute(queryHypervisorSql)
    except Exception as e:
        logging.error("[ERR]Error info:%s", e)
        return None

    rets = cursor.fetchall()
    if len(rets) == 0:
        logging.error("[ERR]query hypervisor count error.")
        return None

    # hypervisorNum = rets[0][0]
    # dataKeyList.append('hostNum')
    # dataList.append(hypervisorNum)

    try:
    # count(*)是统计返回数据条数，这里是根据region参数返回vm数量，是一个总数
        queryVmSql = "select count(*) from t_vm left join t_hypervisor on t_vm.t_hypervisor_id=t_hypervisor.id " \
                     "left join t_cluster on t_hypervisor.t_cluster_id=t_cluster.id " \
                     "left join t_pod on t_cluster.t_pod_id=t_pod.id " \
                     "left join t_az on t_pod.t_az_id=t_az.id left join t_region on t_az.t_region_id=t_region.id " \
                     "where (t_cluster.attribute ='common' or t_cluster.attribute ='dec'  or t_cluster.attribute='deh') " \
                     "and t_region.name = '"+regionName+"' ;"
        cursor.execute(queryVmSql)
    except Exception as e:
        logging.error("[ERR]Error info:%s", e)
        return None

    vmRets = cursor.fetchall()
    if len(vmRets) == 0:
        logging.error("[ERR]query vm count error.")
        return None

    regionVmNum = vmRets[0][0]
    dataKeyList.append('vmNum')
    dataList.append(regionVmNum)

    # 获取该region下的全部flavor信息
    try:
        querySql = "select t_flavor.* from t_flavor left join t_region on t_flavor.t_region_id=t_region.id where t_region.name='"+regionName+"';"
        cursor.execute(querySql)
    except Exception as e:
        logging.error("[ERR]Error info:%s", e)
        return None

    flavorRets = cursor.fetchall()
    if len(flavorRets) == 0:
        logging.error("[ERR]query detail flavor error.")
        return None

    # 获取flavor信息中的flavor名称和 flavor ID
    for flavor in flavorRets:
        tFlavorId = flavor[0]
        flavorId = flavor[1]
        try:
            # 根据 flavor ID 查询每个flavor ID 对应的vm数量
            queryVmSql = "select count(*) from t_vm left join t_flavor_detail on t_vm.t_flavor_detail_id = t_flavor_detail.id " \
                         "where t_flavor_detail.t_flavor_id = '"+str(tFlavorId)+"';"
            cursor.execute(queryVmSql)
        except Exception as e:
            logging.error("[ERR]Error info:%s", e)
            continue

        vmRets = cursor.fetchall()
        if len(vmRets) == 0:
            logging.error("[ERR]query vm error.")
            vmNum = 0
        else:
            vmNum = vmRets[0][0]


        dataKeyList.append(flavorId)
        dataList.append(vmNum)

    cursor.close()
    # 将列表存储于字典中
    data = {'dataKeyList':dataKeyList,'dataList':dataList}
    return data
