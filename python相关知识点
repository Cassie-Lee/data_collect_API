linux命令行，如何批量执行python脚本：
定位到当前包含所有脚本的文件夹，执行：for i in `ls *.py`;do python $i;done

python里的“%s”和“%d”是什么意思？
%s  表示格式化一个对象为字符串
%d  表示格式化一个对象为整数
"Hello, %s"%"zhang3" => "Hello, zhang3"
"%d"%33 => "33"
"%s:%d"%("ab",3) => "ab:3"

python的xlrd模块
python操作excel主要用到xlrd和xlwt两个库，xlrd是读excel，xlwt是写excel
在cmd窗口安装：pip install xlrd
data=xlrd.open_workbook(filename)   打开excel文件读取数据，filename是文件名及路径，如果路径或者文件名中有中文，给前面加一个r表示原生字符
常用的函数：
excel中最重要的方法是book和sheet操作
获取book中的一个工作表：
table=data.sheets()[0]  通过索引顺序获取
table=data.sheet_by_index(sheet_index)   通过索引顺序获取
table=data.sheet_by_name(sheet_name)      通过名称获取
以上三个函数都会返回一个xlrd.sheet.sheet()对象
names = data.sheet_names()    #返回book中所有工作表的名字
data.sheet_loaded(sheet_name or indx)   # 检查某个sheet是否导入完毕
行的操作：
nrows = table.nrows  #获取该sheet中的有效行数
table.row(rowx)  #返回由该行中所有的单元格对象组成的列表
table.row_slice(rowx)  #返回由该列中所有的单元格对象组成的列表
table.row_types(rowx, start_colx=0, end_colx=None)    #返回由该行中所有单元格的数据类型组成的列表
table.row_values(rowx, start_colx=0, end_colx=None)   #返回由该行中所有单元格的数据组成的列表
table.row_len(rowx) #返回该列的有效单元格长度
列的操作：
ncols = table.ncols   #获取列表的有效列数
table.col(colx, start_rowx=0, end_rowx=None)  #返回由该列中所有的单元格对象组成的列表
table.col_slice(colx, start_rowx=0, end_rowx=None)  #返回由该列中所有的单元格对象组成的列表
table.col_types(colx, start_rowx=0, end_rowx=None)    #返回由该列中所有单元格的数据类型组成的列表
table.col_values(colx, start_rowx=0, end_rowx=None)   #返回由该列中所有单元格的数据组成的列表
单元格的操作：
table.cell(rowx,colx)   #返回单元格对象
table.cell_type(rowx,colx)    #返回单元格中的数据类型
table.cell_value(rowx,colx)   #返回单元格中的数据
table.cell_xf_index(rowx, colx)   # 暂时还没有搞懂

python long（）函数
long（）函数将数字或字符串转换为一个长整型
class long(x,base=10)                     #x是字符串或数字，base是可选的，进制数，默认十进制，整个函数的返回值是长整型数
>>>long()
0L
>>> long(1)
1L
>>> long('123')
123L

python time strftime()方法
time strftime()函数接收时间元组，并返回以可读字符串表示的当地时间，格式由参数format决定
time.strftime(format[, t])       format是格式字符串，t，可选参数，t是一个struct_time对象

python中时间日期格式化符号：
%y 两位数的年份表示（00-99）
%Y 四位数的年份表示（000-9999）
%m 月份（01-12）
%d 月内中的一天（0-31）
%H 24小时制小时数（0-23）
%I 12小时制小时数（01-12）
%M 分钟数（00=59）
%S 秒（00-59）
%a 本地简化星期名称
%A 本地完整星期名称
%b 本地简化的月份名称
%B 本地完整的月份名称
%c 本地相应的日期表示和时间表示
%j 年内的一天（001-366）
%p 本地A.M.或P.M.的等价符
%U 一年中的星期数（00-53）星期天为星期的开始
%w 星期（0-6），星期天为星期的开始
%W 一年中的星期数（00-53）星期一为星期的开始
%x 本地相应的日期表示
%X 本地相应的时间表示
%Z 当前时区的名称
%% %号本身

linux添加定时任务
执行命令： crontab -e
*****/usr/bin/python /tmp/t.py > dev/null 2>&1
五个星号分别表示分时日月周，/n表示每分时日月周，调整完保退出即可

如何将数据库从生产库修改为测试库：
config目录中有个database.cfg文件，base_name=productionbase修改为base_name=cloudbase

linux下批量执行python脚本：
同一文件夹下，执行多个脚本：for i in `ls *.py`;do python $i;done
或者可以写一个脚本，用于执行多个脚本，这里有一个相对路径问题，如果写定时任务需要注意：
如果一个脚本作用是执行同一路径的其他脚本，在写定时任务的时候，先进行打开该文件夹操作，即定位操作，如：
* * * * *  /usr/bin/python cd /xxxx/ && sciprt.py > dev/null 2>&1
如果是单脚本文件，提供绝对路径即可：
* * * * *  /usr/bin/python /xxxx/sciprt.py > dev/null 2>&1

linux定时任务常见的坑：
路径问题：脚本内涉及到相对路径的，都需要先进行打开操作
编码问题：这种常见于将windows上运行的脚本放到linux服务器上运行。报错：./xxx.py:214:warning:Data truncated for column 'create_time' at row 1
cursor.execute(insertSql,values)。在脚本所在目录下，执行：dos2unix *
权限问题：脚本可以手动执行，但在添加定时任务时，需要给脚本添加执行权限，如何添加详见linux基本操作

其他：

进入虚拟主机：连接itoc（itoc.huawei.com），通过itoc连接虚拟机

进入linux服务器：连接itoc，通过SecureCRT.exe-Shortcut连接到linux服务器，点击首行第二个快速连接图标（quick connect），Hostname处填写ip或者主机名，Username处填写用户名，如root，之后按照提示填写密码即可连接。

从ITOC上传文件到linux服务器：在ITOC上安装WinSCP.exe，通过WinSCP.exe上传文件到linux服务器。

Linux基本操作：

ll 脚本文件（py文件）：查看执行权限（有无x），r4 w2 x1，如果无权限，可执行”sudo chmod 775 filename”（创建者拥有读写执行权限，同组及其他用户拥有读和执行权限）。
Chmod 755 mulu/*  给当前目录下的mulu目录的所有文件创建执行权限

执行脚本：定位到当前文件夹，执行”python 脚本文件”，或者执行“./脚本文件”。

编辑文件：定位到文件所在文件夹，使用vi编辑器，即执行命令“vi 文件名”，进入之后是只读模式，按“i”键打开编辑模式，编辑完成之后，按“ctrl+c”回到只读模式，再按“shift+：”，输入“wq”即可保存更改（“q”是放弃更改再保存）

创建文件夹：mkdir
查看当前文件目录：ls
删除文件：rm 文件名
更改文件名：mv 原文件名 新文件名

cat filename：以只读模式打开文件

查看日志文件：ps –ef|grep python

登录站点：登录虚拟机，输入站点ip，查看相关数据，顺序：站点—集群—主机—虚拟机

FC：通过authtoken访问站点：连接站点后的数据类型记录在fushion compute文档，可查看，返回的数据是json格式
VC：通过smartconnect访问集群：连接后的数据在https://dggvc05-ge/mob查看，查看哪一个集群，就将其中集群名称更换即可，返回的数据类型是树形结构。（账号密码：winroot\vcadmin : wT#GE!Gd8i4jaN）

通过站点ip访问站点内容：在itoc的浏览器输入站点ip，再输入账号密码，选择域用户（只读），即可访问站点内容。

Itoc可以通过winscp上传代码文件至linux服务器。

操作git仓库：
软件：安装git，tortoisegit，安装比较软件beyond compare
已克隆仓库代码到本地，再复制一份代码用于更改操作
注意，setting.py的log改为本地text路径
更改后测试无误后可上传
上传前注意事项，上传前要确认仓库代码是最新的，
操作：选中本地仓库代码文件夹，右键，选中git sync（同步），再选中pull，即可更新代码；也可右键选中tortoisegit，再选中pull即可从git仓库上拉取最新代码。
然后就可以上传自己更改的部分至git仓库，可选中更改后文件，或者文件夹，复制到原始git仓库代码，然后再对原始仓库进行提交操作：选中更新后的本地代码文件夹，右键，选中git sync（同步），再选中push，即可更新更改至git仓库；也可右键选中tortoisegit，再选中push即可更新提交最新代码至git仓库。

Pycharm的上传、下载和同步功能：
同步（直接修改远程linux服务器代码）：connect填上linux服务器的ip账号密码，并填上目标代码路径，即可远程打开在linux服务器上的代码，可直接进行修改，修改完成之后点击上传（箭头标志）即可同步。
上传（上传执行虚拟机本地代码至linux服务器）：mapping填上本地代码路径和上传至linux服务器的目标路径，就可以将本地路径下的代码上传至linux服务器。步骤是，选中左侧本地路径文件夹，点击tools，再点击deployment，选中里面的上传选项即可。
下载（从linux服务器下载代码至本地执行虚拟机）：mapping填上本地代码路径和上传至linux服务器的目标路径。步骤是，选中左侧本地路径文件夹，点击tools，再点击deployment，选中里面的下载选项即可。


linux基本操作：

ls –a：显示当前目录下所有的文件夹及子目录，包括隐藏文件。
ls –c：按文件修改时间排序显示。
ls –l（ll）：显示文件的详细信息，包括类型，权限，修改时间，文件大小等内容。

cp（有时也写成scp）文件复制命令：
cp –r：递归复制该文件目录下所有的子目录和文件
cp –i：复制过程中指定的文件存在，使用此命令可避免旧文件的覆盖，使用此命令在覆盖文件的最终过程需要按Y来进行确认。
cp –a：复制过程中，文件的时间和权限保持不变。

常用命令：
ls 显示文件或目录
-l 列出文件详细信息（list）
-a 列出当前目录下所有文件及目录，包括隐藏的a（all）
mkdir 创建目录
-p 创建目录，若无父目录，则创建p（parent）
cd 切换目录
touch 创建空文件
echo 创建带有内容的文件
cat 查看文件内容
cp 拷贝
mv 移动或重命令
rm 删除文件
-r 递归删除，可删除子目录及文件
-f 强制删除
find 在文件系统中搜索某文件
wc 统计文本中行数、字数、字符数
grep 在文本文件中查找某个字符串
rmdir 删除空目录
tree 树形结构显示目录，需要安装tree包
pwd 显示当前目录
ln 创建链接文件
more、less 分页显示文本文件内容
head、tail 显示文件头、尾内容
ctrl+alt+F1 命令行全屏模式

系统管理命令：
stat 显示指定文件的特定信息，比ls更详细
who 显示在线登录用户
whoami 显示当前操作用户
hostname 显示主机名
uname 显示系统信息
top 动态显示当前耗费资源最后进程信息
ps 显示瞬间进程状态ps –aux
du 查看目录大小 du –h/home带有单位显示目录信息
df 查看磁盘大小 df –h带有单位显示磁盘信息
ifconfig 查看网络情况
ping 测试网络连通
netstat 显示网络状态信息
clear 清屏
alias 对命令重命名
kill 杀死进程，可以先用ps或top命令查看进程的id，然后再用kill命令杀死进程。

打包压缩相关命令：
gzip:
bzip2:
tar：打包压缩
-c 归档文件
-x 压缩文件
-z  gzip压缩文件
-j  bzip2压缩文件
-v 显示压缩或解压压缩过程v（view）
-f 使用档名
例如：
tar –cvf /home/abc.tar /home/abc 只打包，不压缩
tar –zcvf /home/abc.tar.gz /home/abc 打包，并用gzip压缩
tar –jcvf /home/abc.tar.bz2 /home/abc 打包，并用bzip2压缩
当然，如果想解压缩，就直接替换上面的命令 tar –cvf / tar –zcvf / tar –jcvf 中的c换成x就可以了

关机、重启机器：
shutdown
-r 关机重启
-h 关机不重启
now 立刻关机
halt 关机
reboot 重启

vim使用：
vim三种模式：命令模式、插入模式、编辑模式。使用ESC或i或：来切换模式。
命令模式下：
：q  退出
：q！ 强制退出
：wq 保存并退出
：set number  显示行号
：set nonumber  隐藏行号
/apache  在文档中查找apache 按n调到下一个，shift+n上一个
yyp 复制光标所在行，并粘贴
h（左移一个字符）、j（下一行）、k（上一行）、l（右移一个字符）

文件权限管理：
三种基本权限：
R 读 数值表示为4
W 写 数值表示为2
X 可执行 数值为1
ll命令可查看文件权限
-rw-rw-r-  一共十个字符，分成四段
第一个字符“-”表示普通文件；这个位置还可能会出现“|”链接；“d”表示目录
第二-第四个字符“rw-”表示当前所属用户的权限，所以数值表示为4+2=6
第五-第七个字符“rw-”表示当前所属组的权限。
第八-第九个字符“r-”表示其他用户权限
更改权限：执行“sudo chmod 765 filename”

vi和vim的区别：
vim可以看作是vi的升级版
vi适用于文本编辑
vim适用于coding，代码高亮

vi有3个模式：插入模式、命令模式、低行模式
插入模式：在此模式下可以输入字符，按ESC将回到命令模式。
命令模式：可以移动光标、删除字符等。
低行模式：可以保存文件、退出vi、设置vi、查找等功能（低行模式也可以看作是命令模式里的）。
vi filename：打开文件
：q 退出编辑器，如果文件已修改请使用  ：q！ 退出编辑器，且不保存
：wq 保存文件，退出编辑器
插入文本或行（vi命令模式下使用，执行下面命令后将进入插入模式，按ESC键可退出插入模式）
a  在当前光标位置的右边添加文本
i  在当前光标位置的左边添加文本
A 在当前行的末尾位置添加文本
I 在当前行的开始处添加文本（非空字符的行首）
O 在当前行的上面新建一行
o 在当前行的下面新建一行
R 替换（覆盖）当前光标位置及后面的若干文本
J 合并光标所在行及下一行为一行（仍然在命令模式）

